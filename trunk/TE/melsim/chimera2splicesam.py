import sys
import random
from optparse import OptionParser, OptionGroup
import collections
import math
import re

def load_samhash(file):
	samh=collections.defaultdict(lambda:[])
	for l in open(file):
		if l.startswith("@"):
			continue
		a=l.rstrip("\n").split("\t")
		if a[5]=="*":
			continue
		readid=a[0]
		se=SamEntry(a)
		samh[readid].append(se)
		"""
		gnl|ti|580397033	0	contig_12389	722	14	13S534M482S	*	0	0	TGGCGGTTTGTAAGTGTCGCTCACCTGGCACCAAAATCAGCTGAGCCCATCCACCGTGGTGGAGTGCAACCGGTAACAAAATATTCTGTTTGCCTTAAAAATTAGCCGTTCCAATCGGAGTTGGGCGCTCCGCAAGGGGTGAGGGGTCCATATTTTCCCGCGCTTCTCTCGCCAAGGGCTGGAACTCCTGGAAATTTCTCCTCCTTTGCATTGTCGATCTCCTTTTGTTGCTGAACTTTCTAATAACAACTACCGCCGATAACAACAGCTGACAACTGCAGCTGTGCATTAGTGTTGGAAAGCAGCGCCCTATCTTGGTCACCAGAGGGCGCCCAAGCCCTGCTGGCCAGCCCCCGAAACATTGCATACTTTCGGGAACAGCATTTTGGCCGCCAAAATTAAATTGGAAATCGCCGACTGAACTACATATCTTCTTCTTTTCTCTAATTCTCTTTTTTCCCTTCGGGAAGCCCTAAATCCGCATAGCGTCTGTCCTCATATTGAGCGGCTTGTGGTCTGCGTCTGCGTCGTATCGGCCGGCAGCATATTAACGAACTTTCGTAGCTGGCAGTAGGTATAAAATGCATCAAAGTTTATAAAAAAATATGGCTGGAAAAAACGAAGTTACTTCAGGTGGCAGCCACAAAAGTGGAAATCCACCCGCGAATCAAACCGCGGCCGGGGCACGGATTCTGGAGGCCCCTACATCGAAAAATATTAACAGGAAAACTACTGCATCGGTGGCACACTTGGCCGATGCAGCGGACTATCCAACAAGCAGTAATGGCTGTAAAATGCCAGCGGGAGCAACTGCCTTTTCTCGAAGCAGCTTAATGGCCAGAACGCCGCCCAACAGCTACGCATTCGGCTCCGACGGCTATAAACTTGAAGTCTCTGCCAGCTTTTGCACCAGCAGCAGTCGTCACAGTAGACAATGGTCGCTATTTCTGCACCAAGCCAGCATCCACCGCAAATTGTGGCATGAAGATGAATTGGCAAGAATGAAGACGGTTTTGGATGGTGTAAAAC	*	AS:i:486	XS:i:461	XF:i:3	XE:i:3	NM:i:12
		gnl|ti|580485738	0	contig_12389	740	26	11S516M581S	*	0	0	GTGGCTTAAGACAAAATCAGCTGAGCCCATCCACCGTGGTGGAGTGCAACCGGTAACGAAATATTCTGTTTGCCTTAAAAATTAGCCGTTCCAATCGGAGTTGGTCGCTCCGCAAGGGGTGAGGGGTTCATATTTTCCCGCGCTTCTCTCGCCAAGGGCTGGAACTCCTGGAACTTTCTCCTCCTTTGCATTGTCGATCTCCTTTTGTTGCTGAACTTTCTAATACCAACTACCGCCGATAACAACAGCTGACAACTGCAGCTGCGCACCAGTGTTGGAAAGCAGCGCCCTATCTTGGTCACCAGAGGGCGCCCAAGCCCTGCTGGCCAGCCCCCGAAACATTGCATACTTTCGGGAACAGCATTTTGGCCGCCAAAATTAAATTGGAAATCGCCGACTGAACTACATATCTTCTTCCTTTCTCTAATTCTCTTTTTTCCCTTCGGGAAGCCCTAAATCCGCATAGCGTCTGTCCTCATATTGAGCGGCTTGTGGTATGCGTCTGTGTCGCAAAGGCCGGCAGCATATTAACGAACTTTCGTACCTGGCAGTAGGTATAAAATGCATCAAAGTTTATAAAAAATGGCTGGAAAAAACGAAATTACTCCAGGTGGCAGCCACAAAAGTGGAAATCCACCCGCGAATCAAACCGCGGCCGGGGCACGGATTCTGGAGGCCCCTACATCCATTAATATTACCAGGAAAACTACTGCATCGGTGGCACACTTGGCCGATGCAGCGGACAATGCAACAAGCAGTAATGGCTGTAAAATGCCAGCGGGAGCAACTGCCTTTTCTCGAAGCAGCTTAATGGCCAGAACGCCGCCAACAGCTACGCATTCGGCCCCGACGGCTTTAAACTTGAAGTCTCTGCCAGCTTTTACACCAGCAGCAGTCGTCACGGTAGAGGATACGCCAAAAAGAGGTCGTGAATTAAGTCCACCTGCCGACCAATCAGAAGCGGCACCAAAAAGGCCAAGAAGCGTCCAGACAGGTCTAAAAGAACAGATCACTGAACTCGGAGCACTTGTCGACCAAATAGCTGCAATGGTCGCTATTTCTGCACCAAGCCAGCATCCAACCGCAAATTGGTGGCATGAAGGATGAA	*	AS:i:492	XS:i:444	XF:i:3	XE:i:3	NM:i:6
		"""
	return samh
		

def cleanupseqqual(ar,cigsplit):
	# seq ar[9]
	# qual ar[10]
	if len(cigsplit)>0 and cigsplit[0][1]=="S":
		l=cigsplit.pop(0)[0]
		ar[9]=ar[9][l:]
		ar[10]=ar[10][l:]
	if len(cigsplit)>0 and cigsplit[-1][1]=="S":
		l=cigsplit.pop()[0]
		ar[9]=ar[9][:-l]
		ar[10]=ar[10][:-l]
	newcig=""
	for c,s in cigsplit:
		newcig+=str(c)+s
	ar[5]=newcig
	return ar,cigsplit
		


class SamEntry:
	def __init__(self,ar):
		cig=ar[5]
		pe=[]
		for fi in re.finditer(r"(\d+)([HSIDMN])", cig):
			num=int(fi.group(1))
			id=fi.group(2)
			pe.append((num,id))
		ar,pe=cleanupseqqual(ar,pe)
		self.cigsplit=pe
		self.ar=ar
		
		
	@property
	def cigar(self):
		return self.ar[5]
		
	@property
	def read(self):
		return self.ar[9]
	
	
	@property
	def chr(self):
		return self.ar[2]
	@property
	def flag(self):
		return  self.ar[1]
	
		
	@property
	def readid(self):
		return self.ar[0]
	
	@property
	def start(self):
		return int(self.ar[3])
		
	@property
	def strand(self):
		flag=self.flag
		strand="F"
		if flag & 0x016:
			strand="R"
		return strand

	@property
	def end(self):
		start=self.start
		end=start
		cigsplit=self.cigsplit
		
		for num,id in cigsplit:
			if id=="M":
				end+=num
			elif id=="D":
				end+=num
			elif id=="I" or id=="S" or id=="H":
				pass
			else:
				raise Exception("unknown cigar"+id)
		return end
	
	@property
	def seq(self):
		return self.ar[9]
	
	@property
	def qual(self):
		return self.ar[10]


	def array(self):
		return list(self.ar)
	
	def format(self):
		return "\t".join(self.ar)
		
	def format_gtf(self):
		pass
		


parser = OptionParser()
parser.add_option("--sam",dest="sam",help="the input file as sam")
(options, args) = parser.parse_args()
samh=load_samhash(options.sam)

for key,value in samh.items():
	value=sorted(value,key=lambda a:a.start)
	# 0			1	2		3	4	5		6	7	8	9			...10
	#gnl|ti|580397033	0	contig_12389	722	14	13S534M482S	*	0	0	TGGCGGTTTGTAAGTGTCGCTCACCTGGCACCAAAATCAGCTGAGCCCATCCACCGTGGTGGAGTGCAACCGGTAACAAAATATTCTGTTTGCCTTAAAAATTAGCCGTTCCAATCGGAGTTGGGCGCTCCGCAAGGGGTGAGGGGTCCATATTTTCCCGCGCTTCTCTCGCCAAGGGCTGGAACTCCTGGAAATTTCTCCTCCTTTGCATTGTCGATCTCCTTTTGTTGCTGAACTTTCTAATAACAACTACCGCCGATAACAACAGCTGACAACTGCAGCTGTGCATTAGTGTTGGAAAGCAGCGCCCTATCTTGGTCACCAGAGGGCGCCCAAGCCCTGCTGGCCAGCCCCCGAAACATTGCATACTTTCGGGAACAGCATTTTGGCCGCCAAAATTAAATTGGAAATCGCCGACTGAACTACATATCTTCTTCTTTTCTCTAATTCTCTTTTTTCCCTTCGGGAAGCCCTAAATCCGCATAGCGTCTGTCCTCATATTGAGCGGCTTGTGGTCTGCGTCTGCGTCGTATCGGCCGGCAGCATATTAACGAACTTTCGTAGCTGGCAGTAGGTATAAAATGCATCAAAGTTTATAAAAAAATATGGCTGGAAAAAACGAAGTTACTTCAGGTGGCAGCCACAAAAGTGGAAATCCACCCGCGAATCAAACCGCGGCCGGGGCACGGATTCTGGAGGCCCCTACATCGAAAAATATTAACAGGAAAACTACTGCATCGGTGGCACACTTGGCCGATGCAGCGGACTATCCAACAAGCAGTAATGGCTGTAAAATGCCAGCGGGAGCAACTGCCTTTTCTCGAAGCAGCTTAATGGCCAGAACGCCGCCCAACAGCTACGCATTCGGCTCCGACGGCTATAAACTTGAAGTCTCTGCCAGCTTTTGCACCAGCAGCAGTCGTCACAGTAGACAATGGTCGCTATTTCTGCACCAAGCCAGCATCCACCGCAAATTGTGGCATGAAGATGAATTGGCAAGAATGAAGACGGTTTTGGATGGTGTAAAAC	*	AS:i:486	XS:i:461	XF:i:3	XE:i:3	NM:i:12
	#FCC4MD1ACXX:1:1101:18363:5988#GTCCGCAC	99	PPI251	1	175	3S97M	=	325	324	GGGCATGATGAAATAACATAAGGTGGTCCCGTCGAAAGCCGAAGCTTACCGAAGTATACACTTAAATTCAGTGCACGTTTGCTTGTTGAGAGGAAAGGTT	[^^ccccc[abccd__ddebcd_RJ`bX[ec^b``c^Y^ccO_cccc`bhh`W\LHHVZ^``_]ZR_BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB	AS:i:97

	prev=value.pop(0)
	novelar=prev.array()
	while(len(value)>0):
		e=value.pop(0)
		ndist=e.start-prev.end
		novelar[5]+=str(ndist)+"N"+e.cigar
		novelar[9]+=e.seq
		novelar[10]+=e.qual
		prev=e
	n=SamEntry(novelar)
	print n.format()


